"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[352],{280:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"analytics-integration","title":"Analytics & Monitoring Integration","description":"Learn how to integrate react-native-global-exception-handler with popular error monitoring and analytics services.","source":"@site/docs/analytics-integration.md","sourceDirName":".","slug":"/analytics-integration","permalink":"/react-native-global-exception-handler/docs/analytics-integration","draft":false,"unlisted":false,"editUrl":"https://github.com/darshan09200/react-native-global-exception-handler/tree/main/website/docs/analytics-integration.md","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"id":"analytics-integration","sidebar_position":11,"title":"Analytics & Monitoring Integration"},"sidebar":"docSidebar","previous":{"title":"Customization","permalink":"/react-native-global-exception-handler/docs/customization"},"next":{"title":"Testing","permalink":"/react-native-global-exception-handler/docs/testing"}}');var a=t(4848),i=t(8453);const s={id:"analytics-integration",sidebar_position:11,title:"Analytics & Monitoring Integration"},o=void 0,l={},c=[{value:"Firebase Crashlytics",id:"firebase-crashlytics",level:2},{value:"Installation",id:"installation",level:3},{value:"Integration",id:"integration",level:3},{value:"Sentry",id:"sentry",level:2},{value:"Installation",id:"installation-1",level:3},{value:"Integration",id:"integration-1",level:3},{value:"Advanced Sentry Integration",id:"advanced-sentry-integration",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Learn how to integrate ",(0,a.jsx)(n.code,{children:"react-native-global-exception-handler"})," with popular error monitoring and analytics services."]}),"\n",(0,a.jsx)(n.h2,{id:"firebase-crashlytics",children:"Firebase Crashlytics"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://firebase.google.com/products/crashlytics",children:"Firebase Crashlytics"})," provides real-time crash reporting."]}),"\n",(0,a.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install @react-native-firebase/app @react-native-firebase/crashlytics\n# or\nyarn add @react-native-firebase/app @react-native-firebase/crashlytics\n"})}),"\n",(0,a.jsx)(n.h3,{id:"integration",children:"Integration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import crashlytics from '@react-native-firebase/crashlytics';\nimport { \n  setJSExceptionHandler, \n  setNativeExceptionHandler \n} from 'react-native-global-exception-handler';\n\n// JavaScript exceptions\nsetJSExceptionHandler((error, isFatal) => {\n  crashlytics().recordError(error);\n  \n  if (isFatal) {\n    crashlytics().log('Fatal JS error occurred');\n    crashlytics().setAttribute('error_type', 'fatal_js');\n  }\n}, true);\n\n// Native exceptions\nsetNativeExceptionHandler((errorString) => {\n  crashlytics().log(errorString);\n  crashlytics().setAttribute('error_type', 'native');\n});\n"})}),"\n",(0,a.jsx)(n.h2,{id:"sentry",children:"Sentry"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://sentry.io/",children:"Sentry"})," provides comprehensive error tracking and performance monitoring."]}),"\n",(0,a.jsx)(n.h3,{id:"installation-1",children:"Installation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install @sentry/react-native\n# or\nyarn add @sentry/react-native\n"})}),"\n",(0,a.jsx)(n.h3,{id:"integration-1",children:"Integration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import * as Sentry from '@sentry/react-native';\nimport { \n  setJSExceptionHandler, \n  setNativeExceptionHandler \n} from 'react-native-global-exception-handler';\n\n// Initialize Sentry\nSentry.init({\n  dsn: 'YOUR_SENTRY_DSN',\n  enableAutoSessionTracking: true,\n  tracesSampleRate: 1.0,\n});\n\n// JavaScript exceptions\nsetJSExceptionHandler((error, isFatal) => {\n  Sentry.captureException(error, {\n    level: isFatal ? 'fatal' : 'error',\n    tags: {\n      error_type: 'javascript',\n      is_fatal: isFatal\n    }\n  });\n}, true);\n\n// Native exceptions\nsetNativeExceptionHandler((errorString) => {\n  Sentry.captureMessage(errorString, {\n    level: 'fatal',\n    tags: {\n      error_type: 'native'\n    }\n  });\n});\n"})}),"\n",(0,a.jsx)(n.h3,{id:"advanced-sentry-integration",children:"Advanced Sentry Integration"}),"\n",(0,a.jsx)(n.p,{children:"Add breadcrumbs and context for better debugging:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"setJSExceptionHandler((error, isFatal) => {\n  // Add breadcrumb\n  Sentry.addBreadcrumb({\n    category: 'error',\n    message: 'JS Exception occurred',\n    level: isFatal ? 'fatal' : 'error',\n    data: {\n      error_name: error.name,\n      error_message: error.message\n    }\n  });\n  \n  // Set user context\n  Sentry.setUser({\n    id: 'user-id',\n    email: 'user@example.com'\n  });\n  \n  // Set extra context\n  Sentry.setContext('error_details', {\n    isFatal,\n    timestamp: new Date().toISOString()\n  });\n  \n  // Capture the exception\n  Sentry.captureException(error);\n}, true);\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var r=t(6540);const a={},i=r.createContext(a);function s(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);