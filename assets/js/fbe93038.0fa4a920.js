"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[133],{3504:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"testing","title":"Testing","description":"Learn how to safely test your error handling setup and simulate crashes in development.","source":"@site/docs/testing.md","sourceDirName":".","slug":"/testing","permalink":"/react-native-global-exception-handler/docs/testing","draft":false,"unlisted":false,"editUrl":"https://github.com/darshan09200/react-native-global-exception-handler/tree/main/website/docs/testing.md","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"id":"testing","sidebar_position":13,"title":"Testing"},"sidebar":"docSidebar","previous":{"title":"Analytics & Monitoring Integration","permalink":"/react-native-global-exception-handler/docs/analytics-integration"},"next":{"title":"API Reference","permalink":"/react-native-global-exception-handler/docs/api"}}');var r=t(4848),s=t(8453);const a={id:"testing",sidebar_position:13,title:"Testing"},o=void 0,l={},c=[{value:"Simulating JavaScript Errors",id:"simulating-javascript-errors",level:2},{value:"Simulating Native Crashes",id:"simulating-native-crashes",level:2},{value:"Platform Support",id:"platform-support",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Testing Analytics Integration",id:"testing-analytics-integration",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Learn how to safely test your error handling setup and simulate crashes in development."}),"\n",(0,r.jsx)(n.h2,{id:"simulating-javascript-errors",children:"Simulating JavaScript Errors"}),"\n",(0,r.jsx)(n.p,{children:"To test your JS exception handler, throw an error in your app:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { setJSExceptionHandler } from 'react-native-global-exception-handler';\n\nsetJSExceptionHandler((error, isFatal) => {\n  console.log('JS Exception:', error, isFatal);\n}, true);\n\n// Somewhere in your code\nthrow new Error('Test JS Error');\n"})}),"\n",(0,r.jsx)(n.h2,{id:"simulating-native-crashes",children:"Simulating Native Crashes"}),"\n",(0,r.jsxs)(n.p,{children:["Use the built-in ",(0,r.jsx)(n.a,{href:"./api#simulatenativecrashcrashtype",children:(0,r.jsx)(n.code,{children:"simulateNativeCrash"})})," function to trigger native crashes for testing. ",(0,r.jsx)(n.strong,{children:"Warning:"})," This will crash your app."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { simulateNativeCrash, CrashType } from 'react-native-global-exception-handler';\n\n// Simulate a standard NSException (iOS) or equivalent (Android)\nsimulateNativeCrash(CrashType.nsexception);\n\n// Simulate other crash types\nsimulateNativeCrash(CrashType.array_bounds);\nsimulateNativeCrash(CrashType.memory_access);\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Available Crash Types:"})," See the full list in the ",(0,r.jsx)(n.a,{href:"./api#crashtype",children:"CrashType section of the API Reference"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"platform-support",children:"Platform Support"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Works only on iOS and Android (not web)"}),"\n",(0,r.jsx)(n.li,{children:"Some crash types may only be available on one platform"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Only use crash simulation in development or QA builds"}),"\n",(0,r.jsxs)(n.li,{children:["Guard test code with ",(0,r.jsx)(n.code,{children:"__DEV__"})," to avoid accidental production crashes:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"if (__DEV__) {\n  global.simulateCrash = () => {\n    simulateNativeCrash('nsexception');\n  };\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Remove or disable test crash triggers before releasing your app"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"testing-analytics-integration",children:"Testing Analytics Integration"}),"\n",(0,r.jsx)(n.p,{children:"To verify that errors are sent to your analytics service:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Trigger a JS or native crash"}),"\n",(0,r.jsx)(n.li,{children:"Check your analytics dashboard for the error event"}),"\n",(0,r.jsx)(n.li,{children:"Use local logging or AsyncStorage to confirm handler execution"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"./troubleshooting",children:"Troubleshooting"})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);