"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[624],{6439:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"api","title":"API Reference","description":"JavaScript Exception Handlers","source":"@site/docs/api.md","sourceDirName":".","slug":"/api","permalink":"/react-native-global-exception-handler/docs/api","draft":false,"unlisted":false,"editUrl":"https://github.com/darshan09200/react-native-global-exception-handler/tree/main/website/docs/api.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"api","sidebar_position":5,"title":"API Reference"},"sidebar":"docSidebar","previous":{"title":"Migrating from react-native-exception-handler","permalink":"/react-native-global-exception-handler/docs/migration/"},"next":{"title":"Troubleshooting","permalink":"/react-native-global-exception-handler/docs/troubleshooting"}}');var l=r(4848),s=r(8453);const a={id:"api",sidebar_position:5,title:"API Reference"},t=void 0,c={},o=[{value:"JavaScript Exception Handlers",id:"javascript-exception-handlers",level:2},{value:"<code>setJSExceptionHandler(customHandler, allowedInDevMode)</code>",id:"setjsexceptionhandlercustomhandler-allowedindevmode",level:3},{value:"<code>getJSExceptionHandler()</code>",id:"getjsexceptionhandler",level:3},{value:"Native Exception Handlers",id:"native-exception-handlers",level:2},{value:"<code>setNativeExceptionHandler(customErrorHandler, options)</code>",id:"setnativeexceptionhandlercustomerrorhandler-options",level:3},{value:"<code>setHandlerForNativeException(callback, callPreviouslyDefinedHandler)</code> \u26a0\ufe0f Deprecated",id:"sethandlerfornativeexceptioncallback-callpreviouslydefinedhandler-\ufe0f-deprecated",level:3},{value:"Testing &amp; Utilities",id:"testing--utilities",level:2},{value:"<code>simulateNativeCrash(crashType)</code>",id:"simulatenativecrashcrashtype",level:3},{value:"Types",id:"types",level:2},{value:"<code>JSExceptionHandler</code>",id:"jsexceptionhandler",level:3},{value:"<code>NativeExceptionHandler</code>",id:"nativeexceptionhandler",level:3},{value:"<code>ExceptionHandlerOptions</code>",id:"exceptionhandleroptions",level:3},{value:"<code>CrashType</code>",id:"crashtype",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"javascript-exception-handlers",children:"JavaScript Exception Handlers"}),"\n",(0,l.jsx)(n.h3,{id:"setjsexceptionhandlercustomhandler-allowedindevmode",children:(0,l.jsx)(n.code,{children:"setJSExceptionHandler(customHandler, allowedInDevMode)"})}),"\n",(0,l.jsx)(n.p,{children:"Sets a global handler for JavaScript exceptions."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"customHandler"}),": ",(0,l.jsx)(n.a,{href:"#jsexceptionhandler",children:(0,l.jsx)(n.code,{children:"JSExceptionHandler"})})," - Function called when a JS exception occurs"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"allowedInDevMode: boolean"})," - If ",(0,l.jsx)(n.code,{children:"true"}),", handler works in development mode (default: ",(0,l.jsx)(n.code,{children:"false"}),")"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"import { setJSExceptionHandler } from 'react-native-global-exception-handler';\n\nsetJSExceptionHandler((error, isFatal) => {\n  console.log('JS Exception:', error, isFatal);\n  // Send to error reporting service\n}, true); // Enable in dev mode\n"})}),"\n",(0,l.jsx)(n.h3,{id:"getjsexceptionhandler",children:(0,l.jsx)(n.code,{children:"getJSExceptionHandler()"})}),"\n",(0,l.jsx)(n.p,{children:"Returns the currently set global JavaScript exception handler."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Returns:"})," ",(0,l.jsx)(n.a,{href:"#jsexceptionhandler",children:(0,l.jsx)(n.code,{children:"JSExceptionHandler"})})]}),"\n",(0,l.jsx)(n.h2,{id:"native-exception-handlers",children:"Native Exception Handlers"}),"\n",(0,l.jsx)(n.h3,{id:"setnativeexceptionhandlercustomerrorhandler-options",children:(0,l.jsx)(n.code,{children:"setNativeExceptionHandler(customErrorHandler, options)"})}),"\n",(0,l.jsx)(n.p,{children:"Sets a handler for native exceptions with platform-specific options."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"customErrorHandler"}),": ",(0,l.jsx)(n.a,{href:"#nativeexceptionhandler",children:(0,l.jsx)(n.code,{children:"NativeExceptionHandler"})})," - Function called when a native exception occurs"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"options"}),": ",(0,l.jsx)(n.a,{href:"#exceptionhandleroptions",children:(0,l.jsx)(n.code,{children:"ExceptionHandlerOptions"})})," (optional) - Platform-specific configuration. If omitted, defaults are used (see ",(0,l.jsx)(n.a,{href:"#exceptionhandleroptions",children:(0,l.jsx)(n.code,{children:"ExceptionHandlerOptions"})}),")."]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example (New API):"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"import { setNativeExceptionHandler } from 'react-native-global-exception-handler';\n\nsetNativeExceptionHandler((errorString) => {\n  console.log('Native error:', errorString);\n  // Send to error reporting service\n}, {\n  forceAppToQuit: true,\n  callPreviouslyDefinedHandler: false\n});\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Legacy API (Deprecated):"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// Old signature still works but is deprecated\nsetNativeExceptionHandler(\n  handler,\n  forceApplicationToQuit,  // boolean\n  executeDefaultHandler    // boolean\n);\n"})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["Migrating from the old positional signature? See the ",(0,l.jsx)(n.a,{href:"/react-native-global-exception-handler/docs/migration/",children:"Migration Guide"})," for step-by-step update instructions."]}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"sethandlerfornativeexceptioncallback-callpreviouslydefinedhandler-\ufe0f-deprecated",children:[(0,l.jsx)(n.code,{children:"setHandlerForNativeException(callback, callPreviouslyDefinedHandler)"})," \u26a0\ufe0f Deprecated"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Deprecated:"})," Use ",(0,l.jsx)(n.code,{children:"setNativeExceptionHandler"})," instead."]}),"\n",(0,l.jsx)(n.h2,{id:"testing--utilities",children:"Testing & Utilities"}),"\n",(0,l.jsx)(n.h3,{id:"simulatenativecrashcrashtype",children:(0,l.jsx)(n.code,{children:"simulateNativeCrash(crashType)"})}),"\n",(0,l.jsxs)(n.p,{children:["Simulates a native crash for testing purposes. ",(0,l.jsx)(n.strong,{children:"Use with caution"})," - will crash your app!"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"crashType"}),": ",(0,l.jsx)(n.a,{href:"#crashtype",children:(0,l.jsx)(n.code,{children:"CrashType"})})," - Type of crash to simulate (default: ",(0,l.jsx)(n.code,{children:"'nsexception'"}),")"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Available Crash Types:"})," See ",(0,l.jsx)(n.a,{href:"#crashtype",children:(0,l.jsx)(n.code,{children:"CrashType"})})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"import { simulateNativeCrash, CrashType } from 'react-native-global-exception-handler';\n\n// Simulate crash\nsimulateNativeCrash(CrashType.nsexception);\n\n// Avoid calling in production builds\n"})}),"\n",(0,l.jsx)(n.h2,{id:"types",children:"Types"}),"\n",(0,l.jsx)(n.h3,{id:"jsexceptionhandler",children:(0,l.jsx)(n.code,{children:"JSExceptionHandler"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"type JSExceptionHandler = (error: Error, isFatal: boolean) => void;\n"})}),"\n",(0,l.jsx)(n.h3,{id:"nativeexceptionhandler",children:(0,l.jsx)(n.code,{children:"NativeExceptionHandler"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"type NativeExceptionHandler = (errorMessage: string) => void;\n"})}),"\n",(0,l.jsx)(n.h3,{id:"exceptionhandleroptions",children:(0,l.jsx)(n.code,{children:"ExceptionHandlerOptions"})}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"options"})," object allows you to control native crash handling behavior:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"forceAppToQuit"})," (",(0,l.jsx)(n.code,{children:"boolean"}),", Android only, default: ",(0,l.jsx)(n.code,{children:"true"}),"):","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["If ",(0,l.jsx)(n.code,{children:"true"})," (default), the app will be force-closed after your handler runs. Useful for ensuring a clean state after a fatal native crash."]}),"\n",(0,l.jsxs)(n.li,{children:["If ",(0,l.jsx)(n.code,{children:"false"}),", the app will attempt to continue running after the handler."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"callPreviouslyDefinedHandler"})," (",(0,l.jsx)(n.code,{children:"boolean"}),", iOS & Android, default: ",(0,l.jsx)(n.code,{children:"false"}),"):","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["If ",(0,l.jsx)(n.code,{children:"true"}),", any previously registered native exception handler will be called after your handler."]}),"\n",(0,l.jsxs)(n.li,{children:["If ",(0,l.jsx)(n.code,{children:"false"})," (default), only your handler is called."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Default values:"})}),"\n",(0,l.jsxs)(n.p,{children:["If you omit the ",(0,l.jsx)(n.code,{children:"options"})," parameter, the defaults are:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"{\n  forceAppToQuit: true,\n  callPreviouslyDefinedHandler: false\n}\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"interface ExceptionHandlerOptions {\n  callPreviouslyDefinedHandler?: boolean;\n  forceAppToQuit?: boolean;\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"crashtype",children:(0,l.jsx)(n.code,{children:"CrashType"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"enum CrashType {\n  nsexception = 'nsexception',\n  array_bounds = 'array_bounds',\n  invalid_argument = 'invalid_argument',\n  memory_access = 'memory_access',\n  abort = 'abort',\n  stack_overflow = 'stack_overflow',\n  internal_inconsistency = 'internal_inconsistency',\n  malloc_error = 'malloc_error',\n  sigill = 'sigill',\n  sigbus = 'sigbus',\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>t});var i=r(6540);const l={},s=i.createContext(l);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);