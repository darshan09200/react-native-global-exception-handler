"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[590],{229:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"examples/analytics-integration","title":"Analytics Integration","description":"Quick reference snippets for wiring react-native-global-exception-handler into popular monitoring services. (Assumes the service SDKs are already installed & initialized.)","source":"@site/docs/examples/analytics-examples.md","sourceDirName":"examples","slug":"/examples/analytics-integration","permalink":"/react-native-global-exception-handler/docs/examples/analytics-integration","draft":false,"unlisted":false,"editUrl":"https://github.com/darshan09200/react-native-global-exception-handler/tree/main/website/docs/examples/analytics-examples.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"analytics-integration","sidebar_position":3,"title":"Analytics Integration"},"sidebar":"docSidebar","previous":{"title":"Advanced Examples","permalink":"/react-native-global-exception-handler/docs/examples/advanced-examples"},"next":{"title":"Migrating from react-native-exception-handler","permalink":"/react-native-global-exception-handler/docs/migration/"}}');var a=r(4848),i=r(8453);const s={id:"analytics-integration",sidebar_position:3,title:"Analytics Integration"},o=void 0,l={},c=[{value:"Sentry",id:"sentry",level:2},{value:"Crashlytics",id:"crashlytics",level:2},{value:"Custom Analytics",id:"custom-analytics",level:2}];function p(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Quick reference snippets for wiring ",(0,a.jsx)(n.code,{children:"react-native-global-exception-handler"})," into popular monitoring services. (Assumes the service SDKs are already installed & initialized.)"]}),"\n",(0,a.jsx)(n.h2,{id:"sentry",children:"Sentry"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import * as Sentry from '@sentry/react-native';\nimport { \n  setJSExceptionHandler, \n  setNativeExceptionHandler \n} from 'react-native-global-exception-handler';\n\n// JavaScript exceptions\nsetJSExceptionHandler((error, isFatal) => {\n  Sentry.captureException(error, {\n    level: isFatal ? 'fatal' : 'error',\n    tags: {\n      error_type: 'javascript',\n      is_fatal: isFatal\n    }\n  });\n}, true);\n\n// Native exceptions\nsetNativeExceptionHandler((errorString) => {\n  Sentry.captureMessage(errorString, {\n    level: 'fatal',\n    tags: {\n      error_type: 'native'\n    }\n  });\n});\n"})}),"\n",(0,a.jsx)(n.h2,{id:"crashlytics",children:"Crashlytics"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import crashlytics from '@react-native-firebase/crashlytics';\nimport { \n  setJSExceptionHandler, \n  setNativeExceptionHandler \n} from 'react-native-global-exception-handler';\n\n// JavaScript exceptions\nsetJSExceptionHandler((error, isFatal) => {\n  crashlytics().recordError(error);\n  \n  if (isFatal) {\n    crashlytics().log('Fatal JS error occurred');\n    crashlytics().setAttribute('error_type', 'fatal_js');\n  }\n}, true);\n\n// Native exceptions\nsetNativeExceptionHandler((errorString) => {\n  crashlytics().log(errorString);\n  crashlytics().setAttribute('error_type', 'native');\n});\n"})}),"\n",(0,a.jsx)(n.h2,{id:"custom-analytics",children:"Custom Analytics"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import { Alert, BackHandler } from 'react-native';\nimport { setJSExceptionHandler } from 'react-native-global-exception-handler';\n\nconst reportError = (error: Error) => {\n  // Example: send to your API or analytics\n  console.log('Reporting error:', error.message);\n};\n\nsetJSExceptionHandler((error, isFatal) => {\n  if (isFatal) {\n    reportError(error);\n    Alert.alert(\n      'Unexpected error occurred',\n      `Fatal: ${error.name}\\n${error.message}\\nThe app will now close.`,\n      [\n        {\n          text: 'Close',\n          onPress: () => BackHandler.exitApp()\n        }\n      ]\n    );\n  } else {\n    // Non-fatal - could still log/report\n    console.warn('Non-fatal error:', error.message);\n  }\n}, true);\n\nsetNativeExceptionHandler((errorString) => {\n  //You can do something like call an api to report to dev team here\n  //example\n  // fetch('http://<YOUR API TO REPORT TO DEV TEAM>?error='+errorString);\n  //\n}, {\n  forceAppToQuit: true\n});\n"})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>o});var t=r(6540);const a={},i=t.createContext(a);function s(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);